// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userId     Int               @id @default(autoincrement())
  email      String            @unique
  name       String            @db.VarChar(255)
  categories Category[]        @relation("categories_user")
  expenses   ExpensesOnUsers[]
  payers     Expense[]
}

model Expense {
  expenseId  Int               @id @default(autoincrement())
  amount     Int
  createdAt  DateTime          @default(now())
  category   Category          @relation("category_expenses", fields: [categoryId], references: [categoryId], onUpdate: Cascade, onDelete: Cascade)
  categoryId Int
  users      ExpensesOnUsers[]
  payer      User              @relation(fields: [paidBy], references: [userId], onUpdate: Cascade, onDelete: Cascade)
  paidBy     Int
}

model ExpensesOnUsers {
  expense   Expense @relation(fields: [expenseId], references: [expenseId], onUpdate: Cascade, onDelete: Cascade)
  expenseId Int // relation scalar field (used in the `@relation` attribute above)
  user      User    @relation(fields: [userId], references: [userId], onUpdate: Cascade, onDelete: Cascade)
  userId    Int // relation scalar field (used in the `@relation` attribute above)

  @@id([expenseId, userId])
}

model Category {
  categoryId Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  expenses   Expense[] @relation("category_expenses")
  userId     Int
  user       User      @relation("categories_user", fields: [userId], references: [userId], onUpdate: Cascade, onDelete: Cascade)
}
